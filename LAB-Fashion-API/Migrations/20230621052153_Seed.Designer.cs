// <auto-generated />
using System;
using LAB_Fashion_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAB_Fashion_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230621052153_Seed")]
    partial class Seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LAB_Fashion_API.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Accountable")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Release")
                        .HasColumnType("Date");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accountable = 1,
                            Brand = "Adidas",
                            Budget = 50000.0,
                            Name = "Coleção 1",
                            Release = new DateTime(2025, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Season = 4,
                            Status = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Accountable = 2,
                            Brand = "Nike",
                            Budget = 100000.0,
                            Name = "Coleção 2",
                            Release = new DateTime(2030, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Season = 1,
                            Status = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Accountable = 1,
                            Brand = "Shein",
                            Budget = 200000.0,
                            Name = "Coleção 3",
                            Release = new DateTime(2055, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Season = 2,
                            Status = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Accountable = 4,
                            Brand = "Renner",
                            Budget = 45000.0,
                            Name = "Coleção 4",
                            Release = new DateTime(2045, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Season = 3,
                            Status = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Accountable = 3,
                            Brand = "Insider",
                            Budget = 1000.0,
                            Name = "Coleção 5",
                            Release = new DateTime(2042, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Season = 4,
                            Status = 1,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("LAB_Fashion_API.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollectionId = 1,
                            Layout = 2,
                            Name = "Modelo 1",
                            Type = 4
                        },
                        new
                        {
                            Id = 2,
                            CollectionId = 1,
                            Layout = 3,
                            Name = "Modelo 2",
                            Type = 4
                        },
                        new
                        {
                            Id = 3,
                            CollectionId = 3,
                            Layout = 1,
                            Name = "Modelo 3",
                            Type = 5
                        },
                        new
                        {
                            Id = 4,
                            CollectionId = 2,
                            Layout = 2,
                            Name = "Modelo 4",
                            Type = 7
                        },
                        new
                        {
                            Id = 5,
                            CollectionId = 5,
                            Layout = 3,
                            Name = "Modelo 5",
                            Type = 6
                        });
                });

            modelBuilder.Entity("LAB_Fashion_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("Date");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasFilter("[Cnpj] IS NOT NULL");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasFilter("[Cpf] IS NOT NULL");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1999, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Cpf = "99999999999",
                            Email = "adm@adm.com",
                            Name = "Admin",
                            PasswordHash = new byte[] { 134, 113, 41, 83, 207, 16, 33, 81, 204, 222, 65, 211, 30, 92, 250, 143, 63, 135, 119, 203, 191, 162, 0, 187, 36, 189, 251, 201, 134, 21, 118, 131 },
                            PasswordSalt = new byte[] { 29, 110, 38, 125, 82, 193, 37, 246, 223, 219, 150, 33, 102, 122, 160, 69, 252, 246, 249, 93, 30, 191, 205, 60, 240, 199, 82, 41, 57, 194, 94, 66, 237, 48, 194, 135, 222, 25, 94, 229, 105, 153, 215, 102, 225, 48, 154, 224, 0, 255, 115, 99, 32, 191, 242, 37, 118, 189, 247, 23, 68, 160, 9, 192 },
                            Phone = "55999999999",
                            Sex = "Masculino",
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1999, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Cpf = "999999991522",
                            Email = "matheus@email.com",
                            Name = "Matheus",
                            PasswordHash = new byte[] { 173, 98, 184, 177, 137, 33, 91, 42, 164, 168, 172, 159, 192, 27, 42, 158, 99, 18, 16, 44, 77, 2, 81, 59, 167, 247, 196, 212, 49, 106, 67, 71 },
                            PasswordSalt = new byte[] { 29, 110, 38, 125, 82, 193, 37, 246, 223, 219, 150, 33, 102, 122, 160, 69, 252, 246, 249, 93, 30, 191, 205, 60, 240, 199, 82, 41, 57, 194, 94, 66, 237, 48, 194, 135, 222, 25, 94, 229, 105, 153, 215, 102, 225, 48, 154, 224, 0, 255, 115, 99, 32, 191, 242, 37, 118, 189, 247, 23, 68, 160, 9, 192 },
                            Phone = "55999999666",
                            Sex = "Masculino",
                            Status = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1996, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Cpf = "999999991212",
                            Email = "emilly@email.com",
                            Name = "Emilly",
                            PasswordHash = new byte[] { 234, 17, 144, 20, 178, 10, 227, 34, 25, 211, 235, 97, 47, 109, 80, 13, 38, 229, 160, 63, 69, 18, 85, 28, 202, 68, 61, 140, 8, 10, 236, 39 },
                            PasswordSalt = new byte[] { 29, 110, 38, 125, 82, 193, 37, 246, 223, 219, 150, 33, 102, 122, 160, 69, 252, 246, 249, 93, 30, 191, 205, 60, 240, 199, 82, 41, 57, 194, 94, 66, 237, 48, 194, 135, 222, 25, 94, 229, 105, 153, 215, 102, 225, 48, 154, 224, 0, 255, 115, 99, 32, 191, 242, 37, 118, 189, 247, 23, 68, 160, 9, 192 },
                            Phone = "55999995566",
                            Sex = "Feminino",
                            Status = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1983, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Cpf = "999556999999",
                            Email = "user@email.com",
                            Name = "Usuario",
                            PasswordHash = new byte[] { 37, 219, 180, 52, 251, 60, 191, 99, 27, 133, 4, 232, 187, 18, 213, 42, 254, 194, 209, 248, 188, 36, 109, 243, 57, 160, 242, 252, 86, 62, 147, 141 },
                            PasswordSalt = new byte[] { 29, 110, 38, 125, 82, 193, 37, 246, 223, 219, 150, 33, 102, 122, 160, 69, 252, 246, 249, 93, 30, 191, 205, 60, 240, 199, 82, 41, 57, 194, 94, 66, 237, 48, 194, 135, 222, 25, 94, 229, 105, 153, 215, 102, 225, 48, 154, 224, 0, 255, 115, 99, 32, 191, 242, 37, 118, 189, 247, 23, 68, 160, 9, 192 },
                            Phone = "55999922399",
                            Sex = "Feminino",
                            Status = 2,
                            Type = 4
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1992, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Cnpj = "12999444000122",
                            Email = "carlos@email.com",
                            Name = "Carlos",
                            PasswordHash = new byte[] { 73, 190, 245, 67, 161, 50, 181, 14, 67, 186, 214, 120, 237, 22, 193, 112, 26, 195, 147, 175, 186, 40, 39, 170, 9, 242, 12, 10, 1, 152, 56, 156 },
                            PasswordSalt = new byte[] { 29, 110, 38, 125, 82, 193, 37, 246, 223, 219, 150, 33, 102, 122, 160, 69, 252, 246, 249, 93, 30, 191, 205, 60, 240, 199, 82, 41, 57, 194, 94, 66, 237, 48, 194, 135, 222, 25, 94, 229, 105, 153, 215, 102, 225, 48, 154, 224, 0, 255, 115, 99, 32, 191, 242, 37, 118, 189, 247, 23, 68, 160, 9, 192 },
                            Phone = "55999991624",
                            Sex = "Masculino",
                            Status = 1,
                            Type = 3
                        });
                });

            modelBuilder.Entity("LAB_Fashion_API.Models.Collection", b =>
                {
                    b.HasOne("LAB_Fashion_API.Models.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LAB_Fashion_API.Models.Model", b =>
                {
                    b.HasOne("LAB_Fashion_API.Models.Collection", "Collection")
                        .WithMany("Models")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("LAB_Fashion_API.Models.Collection", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("LAB_Fashion_API.Models.User", b =>
                {
                    b.Navigation("Collections");
                });
#pragma warning restore 612, 618
        }
    }
}
